<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ejemplos on C√≥digo R</title>
    <link>/tags/ejemplos/</link>
    <description>Recent content in ejemplos on C√≥digo R</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-es</language>
    <lastBuildDate>Fri, 19 Apr 2019 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="/tags/ejemplos/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Midiendo el calentamiento global con ecmwfr</title>
      <link>/2019/04/ecmwfr-calentamiento-global/</link>
      <pubDate>Fri, 19 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/04/ecmwfr-calentamiento-global/</guid>
      <description>


&lt;p&gt;Para mi investigaci√≥n necesitaba bajar datos meteorol√≥gicos grillados del ERA-Interim, que es una base de datos generada por el &lt;a href=&#34;https://www.ecmwf.int/&#34;&gt;ECMWF&lt;/a&gt;. Bajar los datos en su sitio web es &lt;strong&gt;muy&lt;/strong&gt; inc√≥mido y requiere &lt;strong&gt;muchos&lt;/strong&gt; clicks. Por suerte, me encontr√© con el paquete &lt;a href=&#34;https://github.com/khufkens/ecmwfr&#34;&gt;ecmwfr&lt;/a&gt; con el que pude bajar los datos directamente desde R y muy f√°cilmente. Una de las cosas geniales del c√≥digo abierto, es que los usuarios pueden ser colaboradores, as√≠ que suger√≠ algunas cosas y aport√© un poco de c√≥digo.&lt;/p&gt;
&lt;p&gt;Ahora, una nueva versi√≥n est√° de camino a CRAN, as√≠ que quer√≠a mostrar un peque√±o ejemplo de lo que se puede hacer con el paquete.&lt;/p&gt;
&lt;p&gt;Para bajar datos de los servidores del ECMWF hace falta tener una cuenta. Si van a seguir estos pasos, antes que nada van a tener que crearse una y agregar la key del API al keyring de ecmwfr. Esto se hace todo interactivamente con este comando:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ecmwfr)

wf_set_key(service = &amp;quot;webapi&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Eso los lleva a la URL correcta donde pueden conseguir la clave y despu√©s configura todo para usarla.&lt;/p&gt;
&lt;p&gt;Lo segundo que hace fatla es un &lt;em&gt;request&lt;/em&gt; v√°lido. Como la API tiene un mont√≥n de dataset distintos, con distinta resoluci√≥n temporal y otras propiedades, armar uno desde cero es m√°s bien complicado. Es preferible ir &lt;a href=&#34;https://apps.ecmwf.int/datasets/&#34;&gt;a la p√°gina&lt;/a&gt; y usar su interfaz para crear un &lt;em&gt;request&lt;/em&gt; b√°sico del dataset de interes. En mi caso, voy a usar datos mensuales de &lt;a href=&#34;https://apps.ecmwf.int/datasets/data/interim-full-daily/levtype=sfc/&#34;&gt;ERA Interim&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;../../post/2019-04-19-como-cambio-el-tiempo-desde-que-naci_files/webapi-erainterim.png&#34; alt=&#34;ERA Interim request&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;ERA Interim request&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Se puede ver que no hay forma alguna de descargar todos los a√±os usando la interfaz web. Pero abajo dse todo hay un bot√≥n que dice ‚ÄúView the MARS request‚Äù.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;../../post/2019-04-19-como-cambio-el-tiempo-desde-que-naci_files/webapi-erainterim2.png&#34; alt=&#34;ERA Interim MARS&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;ERA Interim MARS&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Y eso provee el texto del &lt;em&gt;request&lt;/em&gt; que despu√©s voy a modificar un poco. En R, convierto este template en una lista usando la addin de RStudio ‚ÄúMARS to list‚Äù (pero si quieren peuden hacerlo a mano). Agregu√© &lt;code&gt;format  = &amp;quot;netcdf&amp;quot;&lt;/code&gt; al final para que me devuelva todo en formato NetCDF.&lt;/p&gt;
&lt;p&gt;Despu√©s le paso esa lista a la funci√≥n &lt;code&gt;wf_archetype()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ERAI_monthly &amp;lt;- wf_archetype(
   request = list(
      class   = &amp;quot;ei&amp;quot;,
      dataset = &amp;quot;interim&amp;quot;,
      date    = &amp;quot;19790101/19790201/19790301/19790401/19790501/19790601/19790701/19790801/19790901/19791001/19791101/19791201&amp;quot;,
      expver  = &amp;quot;1&amp;quot;,
      grid    = &amp;quot;0.75/0.75&amp;quot;,
      levtype = &amp;quot;sfc&amp;quot;,
      param   = &amp;quot;167.128&amp;quot;,
      stream  = &amp;quot;moda&amp;quot;,
      type    = &amp;quot;an&amp;quot;,
      target  = &amp;quot;output&amp;quot;,
      format  = &amp;quot;netcdf&amp;quot;),
   dynamic_fields = c(&amp;quot;date&amp;quot;, &amp;quot;grid&amp;quot;, &amp;quot;target&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Esto me crea una funci√≥n (que llam√© ‚ÄúERAI_monthly‚Äù) con argumentos ‚Äúdate‚Äù, ‚Äúgrid‚Äù and ‚Äútarget‚Äù. No cambio la lista a mano porque quiero estar seguro de siempre tener un &lt;em&gt;request&lt;/em&gt; v√°lido que apunte a ERA Interim. Para este peque√±o ejemplo es medio mucho, pero es √∫til para usar en un proyecto m√°s grande.&lt;/p&gt;
&lt;p&gt;Una cosa a notar es que el formato de las fechas es bastante largo. Voy a armarme una funci√≥n que haga el trabajo pesado por m√≠.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;format_dates &amp;lt;- function(dates) {
   dates &amp;lt;- as.Date(dates)
   paste0(lubridate::year(dates),
          formatC(lubridate::month(dates), width = 2, flag = &amp;quot;0&amp;quot;),
          formatC(lubridate::day(dates), width = 2, flag = &amp;quot;0&amp;quot;),
          collapse = &amp;quot;/&amp;quot;)
}

format_dates(c(&amp;quot;2018-01-01&amp;quot;, &amp;quot;2018-02-01&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;20180101/20180201&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ahora estoy listo para descargar los datos! Como nac√≠ en agosto de 1988, voy a ver c√≥mo aument√≥ la temperatura media de ese mes desde ese a√±o. Y como no me interesan mucho los detalles locales, voy a usar una resoluci√≥n de 3¬∞ por 3¬∞.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dates &amp;lt;- seq.Date(as.Date(&amp;quot;1988-08-01&amp;quot;), as.Date(&amp;quot;2018-08-01&amp;quot;), &amp;quot;1 year&amp;quot;)

my_request &amp;lt;- ERAI_monthly(date = format_dates(dates), 
                           grid = &amp;quot;3/3&amp;quot;,
                           target = &amp;quot;august_monthly.nc&amp;quot;)
str(my_request)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## List of 11
##  $ class  : chr &amp;quot;ei&amp;quot;
##  $ dataset: chr &amp;quot;interim&amp;quot;
##  $ date   : chr &amp;quot;19880801/19890801/19900801/19910801/19920801/19930801/19940801/19950801/19960801/19970801/19980801/19990801/200&amp;quot;| __truncated__
##  $ expver : chr &amp;quot;1&amp;quot;
##  $ grid   : chr &amp;quot;3/3&amp;quot;
##  $ levtype: chr &amp;quot;sfc&amp;quot;
##  $ param  : chr &amp;quot;167.128&amp;quot;
##  $ stream : chr &amp;quot;moda&amp;quot;
##  $ type   : chr &amp;quot;an&amp;quot;
##  $ target : chr &amp;quot;august_monthly.nc&amp;quot;
##  $ format : chr &amp;quot;netcdf&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Y con esto, uso &lt;code&gt;wf_request()&lt;/code&gt; para bajar los datos. Esto puede llevar su tiempo. No porque el archivo sea muy pesado (para nada, s√≥lo 455kb), sino porque el servidor tiene que procesar el &lt;em&gt;request&lt;/em&gt; y unir todos los datos. Si est√°n siguiendo esto desde su casa, √©ste es el momento para ir a hacere un t√© o, en mi caso, un mate. üçµ&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;wf_request(request = my_request,
           user = &amp;quot;eliocampitelli@gmail.com&amp;quot;, 
           transfer = TRUE,
           path = &amp;quot;data&amp;quot;, 
           verbose = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ahora que tengo mis datos en ‚Äúaugust_monthly.nc‚Äù, s√≥lo necesito cargarlo en memoria para analizarlo. Voy a usar mi paquete &lt;a href=&#34;https://eliocamp.github.io/metR/&#34;&gt;metR&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(metR)
library(ggplot2)
library(data.table)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;august_temp &amp;lt;- ReadNetCDF(&amp;quot;data/august_monthly.nc&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Primero, mirar un poco la estructura de los datos.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;str(august_temp)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Classes &amp;#39;data.table&amp;#39; and &amp;#39;data.frame&amp;#39;:   226920 obs. of  4 variables:
##  $ longitude: int  0 3 6 9 12 15 18 21 24 27 ...
##  $ latitude : int  90 90 90 90 90 90 90 90 90 90 ...
##  $ t2m      : num  273 273 273 273 273 ...
##  $ time     : POSIXct, format: &amp;quot;1988-08-01&amp;quot; &amp;quot;1988-08-01&amp;quot; ...
##  - attr(*, &amp;quot;.internal.selfref&amp;quot;)=&amp;lt;externalptr&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Es un data frame con un valor de &lt;code&gt;t2m&lt;/code&gt; para cada longitud, latitud y tiempo. La temperatura est√° en Kelvin. Quiero ver un campo; el primero.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# mapa
world &amp;lt;- list(geom_path(data = map_data(&amp;quot;world2&amp;quot;), 
                        aes(long, lat, group = group), 
                        size = 0.2, color = &amp;quot;gray50&amp;quot;),
              coord_quickmap(),
              scale_x_longitude(),
              scale_y_latitude())

ggplot(august_temp[time == time[1]], aes(longitude, latitude)) +
   geom_contour_fill(aes(z = t2m - 273.15)) +
   world +
   scale_fill_divergent(&amp;quot;Temperatura a 2m (¬∞C)&amp;quot;) +
   metR:::theme_field()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../post/2019-04-19-como-cambio-el-tiempo-desde-que-naci_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Los tr√≥picos son m√°s c√°lidos que los polos, como debe ser.&lt;/p&gt;
&lt;p&gt;Luego de conocer los datos, voy a computar la tendencia lineal de la temperatura para cada punto de grilla. Estoy usando una forma &lt;strong&gt;muy bruta&lt;/strong&gt; para evaluar la significancia estad√≠stica.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;trends &amp;lt;- august_temp[, FitLm(year = year(time), t2m, se = TRUE), 
                      by = .(longitude, latitude)] 
trends[, p.value :=  pt(abs(estimate)/std.error, df, lower.tail = FALSE)]

ggplot(trends[term == &amp;quot;year&amp;quot;], aes(longitude, latitude)) +
   geom_contour_fill(aes(z = estimate*10), 
                     breaks = AnchorBreaks(0, 0.25, exclude = 0)) +
   stat_subset(aes(subset = p.value &amp;lt;= 0.01), 
               geom = &amp;quot;point&amp;quot;, size = 0.1, alpha = 0.5) +
   world +
   scale_fill_divergent(&amp;quot;Tendencia de temperatura a 2m \n (¬∞C/d√©cada)&amp;quot;) +
   metR:::theme_field() +
   labs(subtitle = &amp;quot;Cambio de la temperatura media de agosto 1988-2018&amp;quot;, 
        caption = &amp;quot;Datos: ERA Interim&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../post/2019-04-19-como-cambio-el-tiempo-desde-que-naci_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;No es sorprendente que la tendencia sea positiva en casi todos lados, aunque no es estad√≠sticamente significativa siempre (usando este m√©todo &lt;strong&gt;muy bruto&lt;/strong&gt;). Notablemente, la temperatura de agosto no aument√≥ mucho donde yo vivo.&lt;/p&gt;
&lt;p&gt;Voy a construir (a lo bruto) una serie temporal de temperatura media global de agosto promediando todos los puntos de grilla para cada a√±o (usando como peso el coseno de la latitud).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gmat &amp;lt;- august_temp[, .(t2m = weighted.mean(t2m, cos(latitude*pi/180))), 
                   by = year(time)]

ggplot(gmat, aes(year, t2m - 273.15)) +
   geom_line() +
   geom_smooth(method = &amp;quot;lm&amp;quot;) +
   scale_y_continuous(&amp;quot;Temperatura media a 2m global de agosto (¬∞C)&amp;quot;) +
   hrbrthemes::theme_ipsum_rc()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../post/2019-04-19-como-cambio-el-tiempo-desde-que-naci_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;De nuevo, no sorprende a nadie que la temperatura global est√° aumentando. Voy a calcular la tasa de aumento.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;trend &amp;lt;- lm(t2m ~ I(year/10), data = gmat)
summary(trend)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = t2m ~ I(year/10), data = gmat)
## 
## Residuals:
##      Min       1Q   Median       3Q      Max 
## -0.28121 -0.05954 -0.01535  0.06890  0.28129 
## 
## Coefficients:
##              Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept) 255.78307    4.71318  54.270  &amp;lt; 2e-16 ***
## I(year/10)    0.16756    0.02353   7.121 7.77e-08 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Residual standard error: 0.1172 on 29 degrees of freedom
## Multiple R-squared:  0.6362, Adjusted R-squared:  0.6236 
## F-statistic: 50.71 on 1 and 29 DF,  p-value: 7.772e-08&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;La tendencia (1.68 ¬∞C/d√©cada) es consistente con &lt;a href=&#34;https://www.ipcc.ch/site/assets/uploads/2018/02/AR5_SYR_FINAL_SPM.pdf&#34;&gt;estimaciones mejores&lt;/a&gt;. üî•&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>